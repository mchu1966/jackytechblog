<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on Jacky&#39;s Tech</title>
    <link>http://localhost:1313/categories/note/</link>
    <description>Recent content in Note on Jacky&#39;s Tech</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Jun 2024 03:00:54 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>String handling in Golang</title>
      <link>http://localhost:1313/posts/string_handling_in_golang/</link>
      <pubDate>Sun, 16 Jun 2024 03:00:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/string_handling_in_golang/</guid>
      <description>String Handling 在編程中非常常見。本文記錄了使用 Golang 處理 String 的常見方法。&#xA;Golang 的 String 是什麼 Link to heading string is the set of all strings of 8-bit bytes, conventionally but not necessarily representing UTF-8-encoded text. A string may be empty, but not nil. Values of string type are immutable.&#xA;本質上，string 是一串 byte (byte slice, 1 byte=8 bits)，而 Golang 的 byte 等於 uint8。&#xA;byte 按照 UTF-8 encode 後產生對應的 character (字元)。由於 1 byte 只有 8 bits，因此單使用 byte 並不能代表所有 UTF-8 encoded 字元，例如中文字、emoji 等，所以 Golang 另外有rune type 處理這些特殊字元。而 Golang 的 rune 等於 int32, 可想而知 run</description>
    </item>
  </channel>
</rss>
